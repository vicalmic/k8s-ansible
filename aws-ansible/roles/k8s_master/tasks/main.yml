---
# tasks file for k8s_master
- name: "install :: updates package lists"
  become: true
  ansible.builtin.apt:
    update_cache: true
    force_apt_get: true

- name: "install :: upgrades package lists"
  become: true
  ansible.builtin.apt:
    upgrade: full
    force_apt_get: true

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu noble stable
    state: present

- name: Install docker and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    force_apt_get: true
  notify:
    - docker status

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: "deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet=1.28.*
      - kubeadm=1.28.*
      - kubectl
    force_apt_get: true

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Initialize the Kubernetes cluster using kubeadm
  command: kubeadm init --apiserver-advertise-address="172.31.0.10" --apiserver-cert-extra-sans="172.31.0.10"  --node-name k8s-master --pod-network-cidr=172.0.0.0/16

- name: Setup kubeconfig
  command: "{{ item }}"
  with_items:
    - mkdir -p /home/$USER/.kube
    - cp -i /etc/kubernetes/admin.conf /home/$USER/.kube/config
    - chown $(id -u):$(id -g) /home/$USER/.kube/config

- name: Install calico pod network
  description: Setup the container networking provider and the network policy engine
  become: false
  command: kubectl create -f https://docs.projectcalico.org/v3.9/getting-started/kubernetes/installation/hosted/calico.yaml

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
